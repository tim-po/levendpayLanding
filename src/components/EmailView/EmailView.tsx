/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import Button1 from 'src/components/Button1/Button1';
import { EmailViewProps } from 'src/types';

const EmailView1: any = styled('div')({
  backgroundColor: `rgba(235, 250, 250, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `49px 64px`,
  boxSizing: `border-box`,
  height: 'auto',
});

const MainContent: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const SubscribeToOurEmailT: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Poppins`,
  fontWeight: `700`,
  fontSize: `28px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  width: `416px`,
  margin: `0px`,
});

const Form: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Input1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `64px`,
  width: `328px`,
  margin: `0px`,
});

const Rectangle937: any = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `10px`,
  width: `328px`,
  height: `64px`,
  position: `absolute`,
  left: `0px`,
  top: `0px`,
});

const Email: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Poppins`,
  fontWeight: `500`,
  fontSize: `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150.02273321151733%`,
  textTransform: `none`,
  opacity: `0.20000000298023224`,
  position: `absolute`,
  left: `27px`,
  top: `17px`,
});

const Button2: any = styled(Button1)(({ theme }: any) => ({
  margin: `20px 0px 0px 0px`,
}));

function EmailView(props: EmailViewProps): JSX.Element {
  return (
    <EmailView1 className={props.className}>
      <MainContent>
        <SubscribeToOurEmailT>
          {`Subscribe to our email to receive the time of the private sale`}
        </SubscribeToOurEmailT>
        <Form>
          <Input1>
            <Rectangle937></Rectangle937>
            <Email>{`Email`}</Email>
          </Input1>
          <Button2 />
        </Form>
      </MainContent>
    </EmailView1>
  );
}

export default EmailView;
