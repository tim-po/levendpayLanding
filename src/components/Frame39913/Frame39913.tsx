/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import Ellipse57Image from 'src/images/HowItWorksView_Ellipse_57.png';
import Ellipse58Image from 'src/images/HowItWorksView_Ellipse_58.png';
import Ellipse581Image from 'src/images/HowItWorksView_Ellipse_58_1.png';
import Ellipse59Image from 'src/images/HowItWorksView_Ellipse_59.png';
import Ellipse60Image from 'src/images/HowItWorksView_Ellipse_60.png';
import Ellipse61Image from 'src/images/HowItWorksView_Ellipse_61.png';
import { styled } from '@mui/material/styles';
import Point from 'src/components/Point/Point';
import { Frame39913Props } from 'src/types';

const HowItWorksView: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 64px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: 'auto',
  width: 'fit-content',
});

const Container: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `520px`,
  width: `1311px`,
  margin: `0px`,
});

const MainContent: any = styled('div')({
  backgroundColor: `rgba(247, 248, 249, 1)`,
  borderRadius: `10px`,
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `65px 69px`,
  boxSizing: `border-box`,
  left: `0px`,
  top: `0px`,
  overflow: `hidden`,
});

const HowItWorks: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Poppins`,
  fontWeight: `700`,
  fontSize: `40px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `60px`,
  textTransform: `none`,
  margin: `0px`,
});

const Line1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `69px 0px 0px 0px`,
});

const Point1: any = styled(Point)(({ theme }: any) => ({
  width: `330px`,
  height: `96px`,
  margin: `0px`,
}));

const Point2: any = styled(Point)(({ theme }: any) => ({
  width: `330px`,
  height: `96px`,
  margin: `0px 0px 0px 85px`,
}));

const Point3: any = styled(Point)(({ theme }: any) => ({
  width: `330px`,
  height: `96px`,
  margin: `0px 0px 0px 85px`,
}));

const Line2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `69px 0px 0px 0px`,
});

const Point4: any = styled(Point)(({ theme }: any) => ({
  width: `330px`,
  height: `96px`,
  margin: `0px`,
}));

const Point5: any = styled(Point)(({ theme }: any) => ({
  width: `330px`,
  height: `96px`,
  margin: `0px 0px 0px 85px`,
}));

const Decoration: any = styled('div')({
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `1105px`,
  height: `429px`,
  left: `75px`,
  top: `74px`,
});

const Ellipse57: any = styled('img')({
  height: `128px`,
  width: `256px`,
  position: `absolute`,
  left: `0px`,
  top: `0px`,
});

const Ellipse58: any = styled('img')({
  height: `128px`,
  width: `128px`,
  position: `absolute`,
  left: `977px`,
  top: `0px`,
});

const Ellipse581: any = styled('img')({
  height: `128px`,
  width: `128px`,
  position: `absolute`,
  left: `349px`,
  top: `0px`,
});

const Ellipse59: any = styled('img')({
  height: `127.5px`,
  width: `127.5px`,
  position: `absolute`,
  left: `722px`,
  top: `64px`,
});

const Ellipse60: any = styled('img')({
  height: `128px`,
  width: `128px`,
  position: `absolute`,
  left: `580px`,
  top: `301px`,
});

const Ellipse61: any = styled('img')({
  height: `128px`,
  width: `128px`,
  position: `absolute`,
  left: `101px`,
  top: `237px`,
});

function Frame39913(props: Frame39913Props): JSX.Element {
  return (
    <HowItWorksView className={props.className}>
      <Container>
        <MainContent>
          <HowItWorks>{`How it works?`}</HowItWorks>
          <Line1>
            <Point1 />
            <Point2 />
            <Point3 />
          </Line1>
          <Line2>
            <Point4 />
            <Point5 />
          </Line2>
        </MainContent>
        <Decoration>
          <Ellipse57 src={Ellipse57Image} loading="lazy" alt={'Ellipse 57'} />
          <Ellipse58 src={Ellipse58Image} loading="lazy" alt={'Ellipse 58'} />
          <Ellipse581 src={Ellipse581Image} loading="lazy" alt={'Ellipse 58'} />
          <Ellipse59 src={Ellipse59Image} loading="lazy" alt={'Ellipse 59'} />
          <Ellipse60 src={Ellipse60Image} loading="lazy" alt={'Ellipse 60'} />
          <Ellipse61 src={Ellipse61Image} loading="lazy" alt={'Ellipse 61'} />
        </Decoration>
      </Container>
    </HowItWorksView>
  );
}

export default Frame39913;
