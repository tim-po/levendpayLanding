/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import Button1 from 'src/components/Button1/Button1';
import { BuyOptionProps } from 'src/types';

const BuyOption1: any = styled('div')({
  background: `linear-gradient(180deg, rgba(14, 28, 247, 1) -3.0616171314629196e-15%, rgba(29, 42, 248, 1) 80.1983296871185%, rgba(38, 51, 248, 0.92) 80.20833134651181%)`,
  borderRadius: `10px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  height: `328px`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `31px 120px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
});

const Allication: any = styled('div')({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Poppins`,
  fontWeight: `600`,
  fontSize: `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `60px`,
  textTransform: `none`,
  margin: `0px`,
});

const AlocPrice: any = styled('div')({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Poppins`,
  fontWeight: `600`,
  fontSize: `64px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `60px`,
  textTransform: `none`,
  margin: `8px 0px 0px 0px`,
});

const NftPrice: any = styled('div')({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Poppins`,
  fontWeight: `600`,
  fontSize: `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `60px`,
  textTransform: `none`,
  margin: `8px 0px 0px 0px`,
});

const Button2: any = styled(Button1)(({ theme }: any) => ({
  margin: `8px 0px 0px 0px`,
}));

function BuyOption(props: BuyOptionProps): JSX.Element {
  return (
    <BuyOption1 className={props.className}>
      <Allication>{`Allication`}</Allication>
      <AlocPrice>{`$500`}</AlocPrice>
      <NftPrice>{`NFT Price $25`}</NftPrice>
      <Button2 />
    </BuyOption1>
  );
}

export default BuyOption;
